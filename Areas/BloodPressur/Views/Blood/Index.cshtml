@model SmartWatch.DbModels.BloodPressure

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<div>
    <h4>BloodPressure</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BloodPressureId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BloodPressureId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UserId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ConnectionId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ConnectionId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Checkedtime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Checkedtime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BloodPressureUpper)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BloodPressureUpper)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BloodPreesureLower)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BloodPreesureLower)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DeviceTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DeviceTime)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
<canvas id="myChart" width="400" height="400"></canvas>
<script>
                var ctx = document.getElementById('myChart').getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                        datasets: [{
                            label: '# of Votes',
                            data: [12, 19, 3, 5, 2, 3],
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(153, 102, 255, 0.2)',
                                'rgba(255, 159, 64, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });
</script>
        </div>
<div class="column"></div>
    </div>