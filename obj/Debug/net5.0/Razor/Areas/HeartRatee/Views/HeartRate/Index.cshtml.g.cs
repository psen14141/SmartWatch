#pragma checksum "E:\ProstyleTechnology\smart-watch\Solution\SmartWatch\Areas\HeartRatee\Views\HeartRate\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4de9bb04f4f63d46e35a8d19ca4b3f0ea2483c49"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_HeartRatee_Views_HeartRate_Index), @"mvc.1.0.view", @"/Areas/HeartRatee/Views/HeartRate/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4de9bb04f4f63d46e35a8d19ca4b3f0ea2483c49", @"/Areas/HeartRatee/Views/HeartRate/Index.cshtml")]
    public class Areas_HeartRatee_Views_HeartRate_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<SmartWatch.DbModels.HeartRate>>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "E:\ProstyleTechnology\smart-watch\Solution\SmartWatch\Areas\HeartRatee\Views\HeartRate\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4de9bb04f4f63d46e35a8d19ca4b3f0ea2483c492985", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"" src=""assets/js/jquery-3.4.0.min.js""></script>
    <!-- Bootstrap tooltips -->
    <script type=""text/javascript"" src=""assets/js/popper.min.js""></script>
    <!-- Bootstrap core JavaScript -->
    <script type=""text/javascript"" src=""assets/js/bootstrap.min.js""></script>
    <!-- MDB core JavaScript -->
    <script type=""text/javascript"" src=""assets/js/mdb.min.js""></script>
    <link href=""https://cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.css"" rel=""stylesheet"" />
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.js""></script>

    <script type=""text/javascript"" src=""https://cdn.jsdelivr.net/jquery/latest/jquery.min.js""></script>
    <script type=""text/javascript"" src=""https://cdn.jsdelivr.net/momentjs/latest/moment.min.js""></script>
    <script type=""text/javascript"" src=""https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js""></script>
    <link rel=""stylesheet"" type=""text/css"" href=""");
                WriteLiteral("https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css\" />\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<div id=""parent"">
    <div class=""row"">
        <div class=""panel-heading"">
            <h3 class=""panel-title""><center>BLOOD RATE VISULIZATION</h3>
        </div>
        <div class=""col-md-8"">


            <div class=""panel panel-primary"">

                <div class=""card card-custom mx-2 mb-3"">
                    <div class=""card-body"">



                        <canvas id=""lineChart""></canvas>
                        <script>
                            var today = new Date();
                            var time = today.getHours() + "":"" + today.getMinutes() + "":"" + today.getSeconds();
                            var ctxL = document.getElementById(""lineChart"").getContext('2d');
                            var myLineChart = new Chart(ctxL, {
                                type: 'line',
                                data:
                                {
                                    labels: [],
                                    datasets: [{
                    ");
            WriteLiteral(@"                    label: ""Blood Rate"",
                                        fill: false,
                                        lineTension: 0.1,
                                        backgroundColor: ""rgba(75,192,192,0.4)"",
                                        borderColor: ""rgba(255,0,0,1)"",
                                        borderCapStyle: 'butt',
                                        borderDash: [],
                                        borderDashOffset: 0.0,
                                        borderJoinStyle: 'miter',
                                        pointBorderColor: ""rgba(75,192,192,1)"",
                                        pointBackgroundColor: ""#fff"",
                                        pointBorderWidth: 1,
                                        pointHoverRadius: 5,
                                        pointHoverBackgroundColor: ""rgba(75,192,192,1)"",
                                        pointHoverBorderColor: ""rgba(220,220,220,1)"",
        ");
            WriteLiteral(@"                                pointHoverBorderWidth: 2,
                                        pointRadius: 1,
                                        pointHitRadius: 10,
                                        data: [],
                                        spanGaps: false,
                                    }
                                    ]
                                },
                                options:
                                {
                                    responsive: true
                                }
                            });
                            function add_data() {
                                var json_url = ""/HeartRatee/HeartRate/GetHeartRateData"";
                                var data1 = data1 || {};

                                $.getJSON(json_url, data1).done(function (response) {
                                    //alert(JSON.stringify(response));
                                    myLineChart.data.labels = res");
            WriteLiteral(@"ponse.labels;
                                    myLineChart.data.datasets[0].data = response.data.heartRate; // or you can iterate for multiple datasets
                                    myLineChart.update(); // finally update our chart
                                });

                            }
                            setInterval(add_data, 1000); //milisecond
                        </script>

                    </div>
                </div>

            </div>
            <span style=""display:inline"">
                <a class=""btn btn-primary"" href=""#"" onclick=""tmTotalHrsOnSite()"" >Today</a>

                <a class=""btn btn-primary"" href=""#"" >This Week</a>

                <a class=""btn btn-primary"" href=""#"" >This Year</a>
            </span>
        </div>

        <div class=""col-md-4"">
            <div class=""card card-custom mx-2 mb-3"">

                <div class=""card-body"">
                    <input type=""text"" name=""datetimes"" id=""dateTime"" />
          ");
            WriteLiteral(@"          <input type='text' class='timepicker' />
                    <script>
                        $("".timepicker"").timepicker({
                            timeFormat: 'HH:mm',
                            interval: 30,
                            scrollbar: true,
                            change: function () {
                                alert(""triggered"");
                            }
                        });
                        //$(function () {


                        //    $('input[name=""datetimes""]').daterangepicker({
                        //        timePicker: true,
                        //        startDate: moment().startOf('hour'),
                        //        endDate: moment().startOf('hour').add(32, 'hour'),
                        //        locale: {
                        //            format: 'DD-MM-YYYY hh:mm A'
                        //        },
                        //        change: function () {
                        //            al");
            WriteLiteral(@"ert(""triggered"");
                        //        }
                        //    });
                        //});


                        function tmTotalHrsOnSite() {
                            alert(""Value.............."");
                            var today = new Date();
                            var dd = String(today.getDate()).padStart(2, '0');
                            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
                            var yyyy = today.getFullYear();

                            today = mm + '/' + dd + '/' + yyyy;
                            var json_url = ""/HeartRatee/HeartRate/GetHeartRateDataByDateRange/?fromdate="" + today + ""&todate="" + today;
                            var data1 = data1 || {};

                            $.getJSON(json_url, data1).done(function (response) {
                                //alert(JSON.stringify(response));
                                myLineChart.data.labels = response.labels;
  ");
            WriteLiteral(@"                              myLineChart.data.datasets[0].data = response.data.heartRate; // or you can iterate for multiple datasets
                                myLineChart.update(); // finally update our chart
                            });



                        }
                    </script>
                </div>

            </div>
        </div>
    </div>
</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<SmartWatch.DbModels.HeartRate>> Html { get; private set; }
    }
}
#pragma warning restore 1591
