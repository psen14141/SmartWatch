#pragma checksum "C:\Bench\Daiki\ProstyleTechnology\15.SmartWatch\00.gitSP\Solution\SmartWatch\Areas\BloodPressur\Views\BloodPressure\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "760388db4d1fb38075259c53145450d641b6f01b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_BloodPressur_Views_BloodPressure_Index), @"mvc.1.0.view", @"/Areas/BloodPressur/Views/BloodPressure/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"760388db4d1fb38075259c53145450d641b6f01b", @"/Areas/BloodPressur/Views/BloodPressure/Index.cshtml")]
    public class Areas_BloodPressur_Views_BloodPressure_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<SmartWatch.DbModels.BloodPressure>>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Bench\Daiki\ProstyleTechnology\15.SmartWatch\00.gitSP\Solution\SmartWatch\Areas\BloodPressur\Views\BloodPressure\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "760388db4d1fb38075259c53145450d641b6f01b3071", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"" src=""assets/js/jquery-3.4.0.min.js""></script>
    <!-- Bootstrap tooltips -->
    <script type=""text/javascript"" src=""assets/js/popper.min.js""></script>
    <!-- Bootstrap core JavaScript -->
    <script type=""text/javascript"" src=""assets/js/bootstrap.min.js""></script>
    <!-- MDB core JavaScript -->
    <script type=""text/javascript"" src=""assets/js/mdb.min.js""></script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<div class=""container"">
    <div class=""panel panel-primary"">
        <div class=""panel-heading"">
            <h3 class=""panel-title""><center>BLOOD PRESSURE VISULIZATION</h3>
        </div>

        <div class=""panel-body"">
            <canvas id=""lineChart""></canvas>
            <script>
                var today = new Date();
                var time = today.getHours() + "":"" + today.getMinutes() + "":"" + today.getSeconds();
                var ctxL = document.getElementById(""lineChart"").getContext('2d');
                //var BloodPressureLower = [10, 20, 30, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 180, 190, 200, 210];
                var myLineChart = new Chart(ctxL, {
                    type: 'line',
                    data:
                    {
                        labels: [time],
                        datasets: [{
                            label: ""Blood Pressure Upper"",
                            fill: false,
                            lineTension: 0.1,
");
            WriteLiteral(@"                            backgroundColor: ""rgba(255,0,0,1.00)"",
                            borderColor: ""rgba(255,0,0,1.00)"",
                            borderCapStyle: 'butt',
                            borderDash: [],
                            borderDashOffset: 0.0,
                            borderJoinStyle: 'miter',
                            pointBorderColor: ""rgba(255,0,0,1.00)"",
                            pointBackgroundColor: ""#fff"",
                            pointBorderWidth: 1,
                            pointHoverRadius: 5,
                            pointHoverBackgroundColor: ""rgba(255,0,0,1.00)"",
                            pointHoverBorderColor: ""rgba(255,0,0,1.00)"",
                            pointHoverBorderWidth: 2,
                            pointRadius: 1,
                            pointHitRadius: 10,
                            data: [],
                            spanGaps: false,
                        },
                            {
              ");
            WriteLiteral(@"                  label: ""Blood Pressure Lower"",
                                fill: false,
                                lineTension: 0.1,
                                backgroundColor: ""rgba(0,0,255,1.00)"",
                                borderColor: ""rgba(0,0,255,1.00)"",
                                borderCapStyle: 'butt',
                                borderDash: [],
                                borderDashOffset: 0.0,
                                borderJoinStyle: 'miter',
                                pointBorderColor: ""rgba(0,0,255,1.00)"",
                                pointBackgroundColor: ""#fff"",
                                pointBorderWidth: 1,
                                pointHoverRadius: 5,
                                pointHoverBackgroundColor: ""rgba(0,0,255,1.00)"",
                                pointHoverBorderColor: ""rgba(0,0,255,1.00)"",
                                pointHoverBorderWidth: 2,
                                pointRadius: 1,
    ");
            WriteLiteral(@"                            pointHitRadius: 10,
                                //data: BloodPressureLower,
                                data: [],
                                spanGaps: false,
                            }
                        ]
                    },
                    options:
                    {
                        responsive: true
                    }
                });
                function add_data() {
                    var json_url = ""/BloodPressur/BloodPressure/GetBloodPressureData"";
                    var data1 = data1 || {};

                    $.getJSON(json_url, data1).done(function (response) {
                        //alert(JSON.stringify(response));
                        myLineChart.data.labels = response.labels;
                        myLineChart.data.datasets[0].data = response.data.BPU; //Blood Pressure Upper
                        myLineChart.data.datasets[1].data = response.data.BPL;// LBlood Presure Lower
                ");
            WriteLiteral("        myLineChart.update(); // finally update our chart\r\n                    });\r\n\r\n                }\r\n                setInterval(add_data, 1000); //milisecond\r\n            </script>\r\n        </div>\r\n    </div\r\n</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<SmartWatch.DbModels.BloodPressure>> Html { get; private set; }
    }
}
#pragma warning restore 1591
